# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: <HOST>/<PREFIX>/<VERSION>/definitions/parameters/dataTypes.yaml

title: Data Types
description: >-
  Defines the data type for the parameter value.
type: string
enum:
  - string
  - secureString
  - int
  - bool
  - object
  - secureObject
  - array

# VS Code only
markdownDescription: |
  ***
  [_Online Documentation_][01]
  ***

  Defines the data type for the parameter value.

  The valid data types for a parameter are:

  - `array` for arrays
  - `bool` for booleans
  - `int` for integers
  - `object` for objects
  - `string` for strings
  - `secureObject` for secure objects
  - `secureString` for secure strings

  Access parameters in a configuration using this syntax:

  ```yaml
  "[parameter('<parameter-name>')]"
  ```

  In YAML, the parameter syntax needs to be enclosed in double-quotes when used as an inline value.
  If the syntax isn't quoted, YAML interprets the syntax as an array.

  [01]: <DOCS_BASE_URL>/reference/schemas/definitions/parameters/datatypes?<DOCS_VERSION_PIN>
markdownEnumDescriptions:
  - | # string
      _Strings are an arbitrary set of text._

      > To define a long strings in YAML, use the folded block syntax or literal block syntax by
      > adding a `>` or `|` and a line break after the key. Then, indent the next line. Every line
      > in the string must start at the same level of indentation. You can trim the trailing
      > whitespace by using `>-` or `|-` instead.
      >
      > For more information, see the [_Online Documentation_][01].

      [01]: <DOCS_BASE_URL>/reference/schemas/definitions/parameters/datatypes?<DOCS_VERSION_PIN>#strings

  - | # secureString
      _Secure strings are text that needs to be handled securely._

      > Secure strings are an arbitrary set of text that DSC and integrating tools shouldn't log or
      > record. If a secure data type parameter is used for a resource instance property that doesn't
      > expect a secure value, the resource may still log or record the value. If the resource has
      > independent logging or recording that isn't handled by DSC, the value may be stored
      > insecurely.
      >
      > Use secure strings for passwords and secrets. Never define a default value for secure string
      > parameters.
      >
      > For more information, see the [_Online Documentation_][01].

      [01]: <DOCS_BASE_URL>/reference/schemas/definitions/parameters/datatypes?<DOCS_VERSION_PIN>#secure-strings-and-objects

  - | # int
      _Integer values are numbers without a fractional part._

      > Integer values may be limited by integrating tools or the DSC resources they're used with.
      > DSC itself supports integer values between `-9223372036854775808` and `9223372036854775807`.
      >
      > For more information, see the [_Online Documentation_][01].

      [01]: <DOCS_BASE_URL>/reference/schemas/definitions/parameters/datatypes?<DOCS_VERSION_PIN>#integers

  - | # bool
      _Boolean values are either `true` or `false`._

      > For more information, see the [_Online Documentation_][01].

      [01]: <DOCS_BASE_URL>/reference/schemas/definitions/parameters/datatypes?<DOCS_VERSION_PIN>#booleans

  - | # object
      _Objects define a set of key-value pairs._

      > The value for each key can be any valid data type. The values can be the same type or
      > different types.
      >
      > Access keys in the object using dot-notation. Dot-notation uses this syntax:
      >
      > ```yaml
      > "[parameters('<parameter-name>').<key-name>]
      > ```
      >
      > For more information, see the [_Online Documentation_][01].

      [01]: <DOCS_BASE_URL>/reference/schemas/definitions/parameters/datatypes?<DOCS_VERSION_PIN>#objects

  - | # secureObject
      _Secure objects are key-value pairs that need to be handled securely._

      > Secure objects define a set of key-value pairs that DSC and integrating tools shouldn't log
      > or record. If a secure data type parameter is used for a resource instance property that
      > doesn't expect a secure value, the resource may still log or record the value. If the
      > resource has independent logging or recording that isn't handled by DSC, the value may be
      > stored insecurely.
      >
      > Never define a default value for secure object parameters.
      >
      > For more information, see the [_Online Documentation_][01].

      [01]: <DOCS_BASE_URL>/reference/schemas/definitions/parameters/datatypes?<DOCS_VERSION_PIN>#secure-strings-and-objects

  - | # array
      _Arrays are a list of one or more values._

      > The values in the array can be any valid data type. Values in the array can be the same type
      > or different types.
      >
      > For more information, see the [_Online Documentation_][01].

      [01]: <DOCS_BASE_URL>/reference/schemas/definitions/parameters/datatypes?<DOCS_VERSION_PIN>#arrays
