# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id:     <HOST>/<PREFIX>/<VERSION>/resource/stdout/test.yaml

title: Test resource operation stdout
description: >-
  Defines the JSON DSC expects a resource to emit to stdout for the **Test** operation.

markdownDescription: | # VS Code only
  ***
  [_Online Documentation_][00]
  ***

  Defines the JSON DSC expects a resource to emit to stdout for the **Test** operation.

  DSC expects different output from the command resource depending on the definition of
  [test.return][01] in the resource manifest:
  
  - If the field is omitted or defined as `state` (the default value), DSC expects the resource to
    emit a JSON Line to stdout representing the actual state of the resource instance with the
    [_inDesiredState][02] canonical resource property included in the returned object.
  - If the field is defined as `stateAndDiff`, DSC expects the resource to emit two JSON Lines. The
    first JSON Line should be an object representing the actual state of the resource instance with
    the `_inDesiredState` included in the returned object. The second JSON Line should be an array
    representing the names of the resource properties that aren't in the desired state.

  [00]: <DOCS_BASE_URL>/reference/schemas/resource/stdout/test?<DOCS_VERSION_PIN>
  [01]: <DOCS_BASE_URL>/reference/schemas/resource/manifest/test?<DOCS_VERSION_PIN>#return

oneOf:
  - title: state output
    description: >-
      For the **Test** operation, DSC always expects the resource to emit a JSON Line to stdout
      representing the actual state of the resource instance with the `_inDesiredState` canonical
      resource property included in the returned object.

    markdownDescription: |-
      ***
      [_Online Documentation_][00]
      ***

      For the **Test** operation, DSC always expects the resource to emit a JSON Line to stdout
      representing the actual state of the resource instance with the [_inDesiredState][01]
      canonical resource property included in the returned object.

      The output must be a JSON object. The object must be a valid representation of an instance of
      the resource.

      Command resources define their instance schema with the [schema.command][02] or
      [schema.embedded][03] fields in their resource manifest. If a command resource returns JSON
      that is invalid against the resource instance schema, DSC raises an error.

      Adapted resource instances are validated by their adapter when the adapter invokes them.

      [00]: <DOCS_BASE_URL>/reference/schemas/resource/stdout/test?<DOCS_VERSION_PIN>#state-output
      [01]: <DOCS_BASE_URL>/reference/schemas/resource/properties/inDesiredState?<DOCS_VERSION_PIN>
      [02]: <DOCS_BASE_URL>/reference/schemas/resource/manifest/schema/command?<DOCS_VERSION_PIN>
      [03]: <DOCS_BASE_URL>/reference/schemas/resource/manifest/schema/embedded?<DOCS_VERSION_PIN>
    type:  object
  - title: diff output
    description: >-
      When a command resource defines `test.return` in its manifest as `stateAndDiff`, DSC expects
      the resource to emit a second JSON Line to stdout representing the names of the resource
      properties that the operation changed on the system.
    markdownDescription: |-
      ***
      [_Online Documentation_][00]
      ***

      When a command resource defines [test.return][01] in its manifest as `stateAndDiff`, DSC
      expects the resource to emit a second JSON Line to stdout representing the names of the
      resource properties that aren't in the desired state.
      
      This output must be emitted after the JSON Line representing the actual state of the resource
      instance with the [_inDesiredState][02] canonical resource property included in the returned
      object.

      The output must be a JSON array. The array may be empty, or it may contain one or more
      strings. Each string in the array must be the name of one of the resource's properties. Each
      string in the array must be unique. The array should never include the `_inDesiredState`
      property.

      [00]: <DOCS_BASE_URL>/reference/schemas/resource/stdout/test?<DOCS_VERSION_PIN>#diff-output
      [01]: <DOCS_BASE_URL>/reference/schemas/resource/manifest/test?<DOCS_VERSION_PIN>#return
      [02]: <DOCS_BASE_URL>/reference/schemas/resource/properties/inDesiredState?<DOCS_VERSION_PIN>
    type: array
    uniqueItems: true
    items:
      type: string