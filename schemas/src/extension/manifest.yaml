# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id:     <HOST>/<PREFIX>/<VERSION>/extension/manifest.yaml

title: DSC extension manifest
description: >-
  Defines the information DSC requires to process and surface a DSC extension.
markdownDescription: | # VS Code only
  ***
  [_Online Documentation_][01]
  ***

  Defines the information DSC requires to process and surface a DSC extension. For DSC to use a
  manifest on a system, the manifest file must:

  1. Be discoverable in the `PATH` environment variable.
  1. Follow the naming convention `<name>.dsc.extension.json`.
  1. Be valid for this schema.

  [01]: <DOCS_BASE_URL>/reference/schemas/extension/manifest/root?<DOCS_VERSION_PIN>

type: object
required:
  - $schema
  - type
  - version
properties:
  $schema:
    title: Manifest Schema
    description: >-
      This property must be the canonical URL of the Command-based DSC resource Manifest schema
      that the manifest is implemented for.
    type:   string
    format: uri
    enum:
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3/extension/manifest.json
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3/bundled/extension/manifest.json
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3/bundled/extension/manifest.vscode.json
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1/extension/manifest.json
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1/bundled/extension/manifest.json
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1/bundled/extension/manifest.vscode.json
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1.0/extension/manifest.json
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1.0/bundled/extension/manifest.json
      - https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1.0/bundled/extension/manifest.vscode.json
      - https://aka.ms/dsc/schemas/v3/extension/manifest.json
      - https://aka.ms/dsc/schemas/v3/bundled/extension/manifest.json
      - https://aka.ms/dsc/schemas/v3/bundled/extension/manifest.vscode.json
      - https://aka.ms/dsc/schemas/v3.1/extension/manifest.json
      - https://aka.ms/dsc/schemas/v3.1/bundled/extension/manifest.json
      - https://aka.ms/dsc/schemas/v3.1/bundled/extension/manifest.vscode.json
      - https://aka.ms/dsc/schemas/v3.1.0/extension/manifest.json
      - https://aka.ms/dsc/schemas/v3.1.0/bundled/extension/manifest.json
      - https://aka.ms/dsc/schemas/v3.1.0/bundled/extension/manifest.vscode.json
    # VS Code Only
    markdownDescription: |
      ***
      [_Online Documentation_][00]
      ***

      The `$schema` property indicates the canonical URI of this schema that the manifest validates
      against. This property is mandatory. DSC uses this value to validate the manifest against the
      correct JSON schema.

      The JSON schemas for DSC are published in multiple versions and forms. This documentation is
      for the latest version of the schema. As a convenience, you can specify either the full URI
      for the schema hosted in GitHub or use the shorter `aka.ms` URI. You can specify the schema
      for a specific semantic version, the latest schema for a minor version, or the latest schema
      for a major version of DSC. For more information about schema URIs and versioning, see
      [DSC JSON Schema URIs][01].
      
      For every version of the schema, there are three valid urls:

      ```yaml
      .../extension/manifest.json
      ```
      
      > The URL to the canonical non-bundled schema. When it's used for validation, the validating
      > client needs to retrieve this schema and every schema it references.

      ```yaml
      .../bundled/extension/manifest.json
      ```
      
      > The URL to the bundled schema. When it's used for validation, the validating client only
      > needs to retrieve this schema.
      > 
      > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
      > still validate the document when it uses this schema, other tools may error or behave
      > in unexpected ways.

      ```yaml
      .../bundled/extension/manifest.vscode.json
      ```
      
      > The URL to the enhanced authoring schema. This schema is much larger than the other
      > schemas, as it includes additional definitions that provide contextual help and snippets
      > that the others don't include.
      > 
      > This schema uses keywords that are only recognized by VS Code. While DSC can still
      > validate the document when it uses this schema, other tools may error or behave in
      > unexpected ways.

      [00]: <DOCS_BASE_URL>/reference/schemas/extension/manifest/root?<DOCS_VERSION_PIN>#schema
      [01]: <DOCS_BASE_URL>/reference/schemas/schema-uris?<DOCS_VERSION_PIN>
    markdownEnumDescriptions:
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3` non-bundled, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3` schema. This URL
          > points to the canonical non-bundled schema. When it's used for validation, the
          > validating client needs to retrieve this schema and every schema it references.
          >
          > This URI is for the schemas in a major version folder. If you pin to a major version
          > folder, like `v3`, the schemas you use will update with every nonbreaking release. You
          > can use those schemas until you want or need to migrate to a new major version of DSC.
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3/bundled/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3` bundled, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3` schema. This URL
          > points to the bundled schema. When it's used for validation, the validating client
          > only needs to retrieve this schema.
          >
          > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
          > still validate the document when it uses this schema, other tools may error or behave
          > in unexpected ways.
          >
          > This URI is for the schemas in a major version folder. If you pin to a major version
          > folder, like `v3`, the schemas you use will update with every nonbreaking release. You
          > can use those schemas until you want or need to migrate to a new major version of DSC.
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3/bundled/extension/manifest.vscode.yaml
          <!-- force a line break -->

          > #### `v3` enhanced authoring, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3` schema. This URL points to the
          > enhanced authoring schema. This schema is much larger than the other schemas, as it
          > includes additional definitions that provide contextual help and snippets that the
          > others don't include.
          >
          > This schema uses keywords that are only recognized by VS Code. While DSC can still
          > validate the document when it uses this schema, other tools may error or behave in
          > unexpected ways.
          >
          > This URI is for the schemas in a major version folder. If you pin to a major version
          > folder, like `v3`, the schemas you use will update with every nonbreaking release. You
          > can use those schemas until you want or need to migrate to a new major version of DSC.
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3.1` non-bundled, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3.1` schema. This URL
          > points to the canonical non-bundled schema. When it's used for validation, the
          > validating client needs to retrieve this schema and every schema it references.
          >
          > This URI is for the schemas in a minor version folder. If you pin to a minor version
          > folder, like `v3.1`, the schemas you use will update with every patch release. Pinning
          > to a minor version folder enables you to take advantage of fixes to the schemas without
          > continually updating your schema URIs. However, to take advantage of any improvements
          > or new features, you need to update the URI whenever a new minor version is released.
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1/bundled/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3.1` bundled, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3.1` schema. This URL
          > points to the bundled schema. When it's used for validation, the validating client
          > only needs to retrieve this schema.
          >
          > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
          > still validate the document when it uses this schema, other tools may error or behave
          > in unexpected ways.
          >
          > This URI is for the schemas in a minor version folder. If you pin to a minor version
          > folder, like `v3.1`, the schemas you use will update with every patch release. Pinning
          > to a minor version folder enables you to take advantage of fixes to the schemas without
          > continually updating your schema URIs. However, to take advantage of any improvements
          > or new features, you need to update the URI whenever a new minor version is released.
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1/bundled/extension/manifest.vscode.yaml
          <!-- force a line break -->

          > #### `v3.1` enhanced authoring, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3.1` schema. This URL points to
          > the enhanced authoring schema. This schema is much larger than the other schemas, as it
          > includes additional definitions that provide contextual help and snippets that the
          > others don't include.
          >
          > This schema uses keywords that are only recognized by VS Code. While DSC can still
          > validate the document when it uses this schema, other tools may error or behave in
          > unexpected ways.
          >
          > This URI is for the schemas in a minor version folder. If you pin to a minor version
          > folder, like `v3.1`, the schemas you use will update with every patch release. Pinning
          > to a minor version folder enables you to take advantage of fixes to the schemas without
          > continually updating your schema URIs. However, to take advantage of any improvements
          > or new features, you need to update the URI whenever a new minor version is released.
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1.0/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3.1.0` non-bundled, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3.1.0` schema. This URL
          > points to the canonical non-bundled schema. When it's used for validation, the
          > validating client needs to retrieve this schema and every schema it references.
          >
          > This URI is for the schemas in a full semantic version folder. If you pin to a full
          > semantic version folder, like `v3.1.0`, you're pinning to schemas that won't change.
          > However, to take advantage of any improvements or fixes to the schemas, you need to
          > update the URI with each release.
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1.0/bundled/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3.1.0` bundled, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3.1.0` schema. This URL
          > points to the bundled schema. When it's used for validation, the validating client
          > only needs to retrieve this schema.
          >
          > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
          > still validate the document when it uses this schema, other tools may error or behave
          > in unexpected ways.
          >
          > This URI is for the schemas in a full semantic version folder. If you pin to a full
          > semantic version folder, like `v3.1.0`, you're pinning to schemas that won't change.
          > However, to take advantage of any improvements or fixes to the schemas, you need to
          > update the URI with each release.
      - | # https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3.1.0/bundled/extension/manifest.vscode.yaml
          <!-- force a line break -->

          > #### `v3.1.0` enhanced authoring, canonical URI
          >
          > Indicates that the extension manifest adheres to the `v3.1.0` schema. This URL points to
          > the enhanced authoring schema. This schema is much larger than the other schemas, as it
          > includes additional definitions that provide contextual help and snippets that the
          > others don't include.
          >
          > This schema uses keywords that are only recognized by VS Code. While DSC can still
          > validate the document when it uses this schema, other tools may error or behave in
          > unexpected ways.
          >
          > This URI is for the schemas in a full semantic version folder. If you pin to a full
          > semantic version folder, like `v3.1.0`, you're pinning to schemas that won't change.
          > However, to take advantage of any improvements or fixes to the schemas, you need to
          > update the URI with each release.

      - | # https://aka.ms/dsc/schemas/v3/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3` non-bundled, short URI
          >
          > Indicates that the extension manifest adheres to the `v3` schema. This URL
          > points to the canonical non-bundled schema. When it's used for validation, the
          > validating client needs to retrieve this schema and every schema it references.
          >
          > This URI is for the schemas in a major version folder. If you pin to a major version
          > folder, like `v3`, the schemas you use will update with every nonbreaking release. You
          > can use those schemas until you want or need to migrate to a new major version of DSC.
      - | # https://aka.ms/dsc/schemas/v3/bundled/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3` bundled, short URI
          >
          > Indicates that the extension manifest adheres to the `v3` schema. This URL
          > points to the bundled schema. When it's used for validation, the validating client
          > only needs to retrieve this schema.
          >
          > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
          > still validate the document when it uses this schema, other tools may error or behave
          > in unexpected ways.
          >
          > This URI is for the schemas in a major version folder. If you pin to a major version
          > folder, like `v3`, the schemas you use will update with every nonbreaking release. You
          > can use those schemas until you want or need to migrate to a new major version of DSC.
      - | # https://aka.ms/dsc/schemas/v3/bundled/extension/manifest.vscode.yaml
          <!-- force a line break -->

          > #### `v3` enhanced authoring, short URI
          >
          > Indicates that the extension manifest adheres to the `v3` schema. This URL points to the
          > enhanced authoring schema. This schema is much larger than the other schemas, as it
          > includes additional definitions that provide contextual help and snippets that the
          > others don't include.
          >
          > This schema uses keywords that are only recognized by VS Code. While DSC can still
          > validate the document when it uses this schema, other tools may error or behave in
          > unexpected ways.
          >
          > This URI is for the schemas in a major version folder. If you pin to a major version
          > folder, like `v3`, the schemas you use will update with every nonbreaking release. You
          > can use those schemas until you want or need to migrate to a new major version of DSC.
      - | # https://aka.ms/dsc/schemas/v3.1/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3.1` non-bundled, short URI
          >
          > Indicates that the extension manifest adheres to the `v3.1` schema. This URL
          > points to the canonical non-bundled schema. When it's used for validation, the
          > validating client needs to retrieve this schema and every schema it references.
          >
          > This URI is for the schemas in a minor version folder. If you pin to a minor version
          > folder, like `v3.1`, the schemas you use will update with every patch release. Pinning
          > to a minor version folder enables you to take advantage of fixes to the schemas without
          > continually updating your schema URIs. However, to take advantage of any improvements
          > or new features, you need to update the URI whenever a new minor version is released.
      - | # https://aka.ms/dsc/schemas/v3.1/bundled/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3.1` bundled, short URI
          >
          > Indicates that the extension manifest adheres to the `v3.1` schema. This URL
          > points to the bundled schema. When it's used for validation, the validating client
          > only needs to retrieve this schema.
          >
          > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
          > still validate the document when it uses this schema, other tools may error or behave
          > in unexpected ways.
          >
          > This URI is for the schemas in a minor version folder. If you pin to a minor version
          > folder, like `v3.1`, the schemas you use will update with every patch release. Pinning
          > to a minor version folder enables you to take advantage of fixes to the schemas without
          > continually updating your schema URIs. However, to take advantage of any improvements
          > or new features, you need to update the URI whenever a new minor version is released.
      - | # https://aka.ms/dsc/schemas/v3.1/bundled/extension/manifest.vscode.yaml
          <!-- force a line break -->

          > #### `v3.1` enhanced authoring, short URI
          >
          > Indicates that the extension manifest adheres to the `v3.1` schema. This URL points to
          > the enhanced authoring schema. This schema is much larger than the other schemas, as it
          > includes additional definitions that provide contextual help and snippets that the
          > others don't include.
          >
          > This schema uses keywords that are only recognized by VS Code. While DSC can still
          > validate the document when it uses this schema, other tools may error or behave in
          > unexpected ways.
          >
          > This URI is for the schemas in a minor version folder. If you pin to a minor version
          > folder, like `v3.1`, the schemas you use will update with every patch release. Pinning
          > to a minor version folder enables you to take advantage of fixes to the schemas without
          > continually updating your schema URIs. However, to take advantage of any improvements
          > or new features, you need to update the URI whenever a new minor version is released.
      - | # https://aka.ms/dsc/schemas/v3.1.0/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3.1.0` non-bundled, short URI
          >
          > Indicates that the extension manifest adheres to the `v3.1.0` schema. This URL
          > points to the canonical non-bundled schema. When it's used for validation, the
          > validating client needs to retrieve this schema and every schema it references.
          >
          > This URI is for the schemas in a full semantic version folder. If you pin to a full
          > semantic version folder, like `v3.1.0`, you're pinning to schemas that won't change.
          > However, to take advantage of any improvements or fixes to the schemas, you need to
          > update the URI with each release.
      - | # https://aka.ms/dsc/schemas/v3.1.0/bundled/extension/manifest.yaml
          <!-- force a line break -->

          > #### `v3.1.0` bundled, short URI
          >
          > Indicates that the extension manifest adheres to the `v3.1.0` schema. This URL
          > points to the bundled schema. When it's used for validation, the validating client
          > only needs to retrieve this schema.
          >
          > This schema uses the bundling model introduced for JSON Schema 2020-12. While DSC can
          > still validate the document when it uses this schema, other tools may error or behave
          > in unexpected ways.
          >
          > This URI is for the schemas in a full semantic version folder. If you pin to a full
          > semantic version folder, like `v3.1.0`, you're pinning to schemas that won't change.
          > However, to take advantage of any improvements or fixes to the schemas, you need to
          > update the URI with each release.
      - | # https://aka.ms/dsc/schemas/v3.1.0/bundled/extension/manifest.vscode.yaml
          <!-- force a line break -->

          > #### `v3.1.0` enhanced authoring, short URI
          >
          > Indicates that the extension manifest adheres to the `v3.1.0` schema. This URL points to
          > the enhanced authoring schema. This schema is much larger than the other schemas, as it
          > includes additional definitions that provide contextual help and snippets that the
          > others don't include.
          >
          > This schema uses keywords that are only recognized by VS Code. While DSC can still
          > validate the document when it uses this schema, other tools may error or behave in
          > unexpected ways.
          >
          > This URI is for the schemas in a full semantic version folder. If you pin to a full
          > semantic version folder, like `v3.1.0`, you're pinning to schemas that won't change.
          > However, to take advantage of any improvements or fixes to the schemas, you need to
          > update the URI with each release.
  type:
    $ref: /<PREFIX>/<VERSION>/definitions/extensionType.yaml
  version:
    title: Extension Semantic Version
    description: >-
      The semantic version (semver) of the DSC extension.
    $ref: /<PREFIX>/<VERSION>/definitions/semver.yaml
    markdownDescription: | # VS Code only
      ***
      [_Online Documentation_][01]
      ***

      The semantic version ([semver][02]) of the DSC extension.

      This value uses the [suggested regular expression][03] to validate whether the string is valid
      semver. This is the same pattern, made multi-line for easier readability:

      ```regex
      ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)
      (?:-(
        (?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)
        (?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))
      *))?
      (?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
      ```

      The first line matches the `major.minor.patch` components of the version. The middle lines match
      the pre-release components. The last line matches the build metadata component.

      [01]: <DOCS_BASE_URL>/reference/schemas/extension/manifest/root?<DOCS_VERSION_PIN>#version
      [02]: https://semver.org/
      [03]: https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
  description:
    title: Extension description
    description: >-
      A short synopsis of the DSC extension's purpose.
    type: string
    markdownDescription: | # VS Code only
      ***
      [_Online Documentation_][01]
      ***

      Defines a short synopsis of the DSC extension's purpose.

      [01]: <DOCS_BASE_URL>/reference/schemas/extension/manifest/root?<DOCS_VERSION_PIN>#description-1
  tags:
    title: Tags
    description: >-
      Defines a list of searchable terms for the extension.
    markdownDescription: | # VS Code only
      ***
      [_Online Documentation_][01]
      ***

      Defines a list of searchable terms for the extension.

      [01]: <DOCS_BASE_URL>/reference/schemas/extension/manifest/root?<DOCS_VERSION_PIN>#tags
    type: array
    uniqueItems: true
    items:
      type: string
      pattern: ^\w+$
      patternErrorMessage: | # VS Code only
        Invalid tag. Tags must be a string of alphanumeric characters and underscores. No other
        characters are permitted.
  discover:
    $ref: /<PREFIX>/<VERSION>/extension/manifest.discover.yaml
  exitCodes:
    # This setting in the root of the schema implies exit codes must have the
    # same meaning across all executions. What about implementations that
    # support multiple executables? Should exitCodes be a key that exists on
    # command/method objects too?
    title: Exit codes
    description: >-
      This property defines a map of valid exit codes for the DSC extension. DSC always interprets
      exit code `0` as a successful operation and any other exit code as an error. Use this
      property to indicate human-readable semantic meanings for the DSC extension's exit codes.
    type: object
    propertyNames:
      pattern: "^-?[0-9]+$"
      patternErrorMessage: |
        Invalid exit code. Must be a string representing a 32-bit signed integer.
    patternProperties:
      "^-?[0-9]+$":
        type: string
    unevaluatedProperties: false
    default:
      '0': Success
      '1': Error
    examples:
      - '0': Success
        '1': Invalid parameter
        '2': Invalid input
        '3': JSON serialization failed
    # VS Code only
    markdownDescription: |
      ***
      [_Online Documentation_][01]
      ***

      This property defines a map of valid exit codes for the DSC extension. DSC always interprets
      exit code `0` as a successful operation and any other exit code as an error. Use this
      property to indicate human-readable semantic meanings for the DSC extension's exit codes.

      Define the keys in this property as strings representing a valid 32-bit signed integer. You
      can't use alternate formats for the exit code. For example, instead of the hexadecimal value
      `0x80070005` for "Access denied", specify the exit code as `-2147024891`. If you're authoring
      your extension manifest in YAML, be sure to wrap the exit code in single quotes, like
      `'0': Success` instead of `0: Success` to ensure the YAML file can be parsed correctly.

      Define the value for each key as a string explaining what the exit code indicates.

      [01]: <DOCS_BASE_URL>/reference/schemas/extension/manifest/root?<DOCS_VERSION_PIN>#exitcodes
    defaultSnippets:
      - label:     ' Defined exit codes'
        description: Defines exit codes with semantic meaning for the extension.
        body:
          '0': Success
          ${1:first exit code number}:  ${2:first exit code meaning}
          ${3:second exit code number}: ${4:second exit code meaning}
